<?php
/** Zend_Controller_Action */
require_once 'Zend/Controller/Action.php';
require_once 'Zend/Db.php';
require_once 'Zend/Debug.php';

class DbController extends Zend_Controller_Action
{
	public function init()
	{
		$this->db = Zend_Db::factory(Zend_Controller_Front::getInstance()->getParam('config')->database);
	}
	
    public function indexAction()
    {
    	Zend_Controller_Front::getInstance()->getParam('auth')->auth(1);
    	// All
    	$sql = 'SELECT * FROM bugs';
		$result = $this->db->fetchAll($sql);
		
		$this->view->table = $result;
    }

    public function addAction()
    {
    	Zend_Controller_Front::getInstance()->getParam('auth')->auth(2);
    	// Render 'bar/form.phtml' instead of 'bar/add.phtml'
        $this->_helper->viewRenderer('form');
    }

    public function editAction()
    {
		Zend_Controller_Front::getInstance()->getParam('auth')->auth(3);
    	$id = $this->_getParam('id', 0);
    	
    	// Only one ID
    	$sql = 'SELECT * FROM bugs WHERE id = ?';
		$result = $this->db->fetchAll($sql, $id);
		$this->view->id = $id;
		$this->view->pic = $result[0]['pic'];

		// Render 'bar/form.phtml' instead of 'bar/edit.phtml'
        $this->_helper->viewRenderer('form');
    }

    public function delAction()
    {
    	Zend_Controller_Front::getInstance()->getParam('auth')->auth(4);
        $id = $this->_getParam('id', 0);
    	
    	// delete
		$result = $this->db->delete('bugs', "id = $id");

		// display List
		$this->_helper->viewRenderer('index');
		$this->indexAction();
    }
    
    public function processAction()
    {
        // do some validation...
        $pic = $this->_getParam('pic', 12);
        $id = $this->_getParam('id', 0);
        if ( $pic > 0 ) {
            // Render 'bar/form.phtml' instead of 'bar/process.phtml'
            $this->view->msg = "No NumbÃ¤rs!";
            $this->editAction();
            return;
        }

        // otherwise continue processing...
        $data = array(
        	'id'		=> $id,
    		'pic' 		=> $pic,
        	'created_on'	=> new Zend_Db_Expr('CURDATE()')
			);
		$this->InsertOrUpdate('bugs', array('id'), $data);
		
		// return the last value generated by an auto-increment column
		if ($id != 0) {
			$this->view->id = $id;						
		}
		else
		{
			$this->view->id = $this->db->lastInsertId();
		}
		$this->view->pic = $pic;
    }
    
    private function InsertOrUpdate($table, $PrimKey, $data)
    {
    	$sql = "SELECT COUNT(*) FROM $table WHERE ";
    	$where = array();
    	$and_bit = false;
    	foreach ($PrimKey as $key) {
    		if ($and_bit)
    		{
    			$sql .= ' and ';
    		}
    		$sql .= "$key = '" . $data[$key] ."'";
    		$where[] = "$key = '" . $data[$key] ."'";
    		$and_bit = true;
    	}
		
    	if ($this->db->fetchOne($sql) == 0 )
    	{
    		//insert
    		Zend_Controller_Front::getInstance()->getParam('auth')->auth(2);
    		$this->db->insert($table, $data);
    	}
    	else
    	{
    		//update
    		Zend_Controller_Front::getInstance()->getParam('auth')->auth(3);
    		$this->db->update($table, $data, $where);
    	}
    }
}


?>
